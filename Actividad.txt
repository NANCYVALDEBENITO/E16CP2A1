

#Ingresar 2 imagenes por usuario
#Ingresar 3 likes por cada imagenes
#Ingresar 8 tags
#Ingresar 3 tags por imagen
#Crear una consulta que muestre el nombre de la imagen y la cantidad de likes que tiene esa imagen
#Crear una consulta que muestre el nombre del usuario y los nombres de las fotos que le pertenecen
#Crear una consulta que muestre el nombre del tag y la cantidad de imagenes asociadas a ese tag


tabla usuario
tabla imagenes
tabla likes
tabla tags (categorías)

Relaciones
imagen usuario
likes imagen
tags imagen
tags
nombre del tag cantidad de imagenes asociadas a ese tag

Restricciones

1. Un usuario no puede darle like 2 veces a una imagen.
2. Una imagen puede tener varios tags sin repetirse.


1 usuario puede tener multimples imagenes
1 like por 1 imagen por 1 usuario
1 imagen puede tener multiples tags
1 imagen puede tener multiples likes


#create database
CREATE DATABASE pintagram
\c pintagram

#create table users
CREATE TABLE users(user_id serial primary key UNIQUE, name varchar(64));

#open table
SELECT * FROM users;

#create table images
CREATE TABLE images(image_id serial primary key UNIQUE, image varchar(64), user_id INTEGER REFERENCES users(user_id));

#open table
SELECT * FROM images;

#create tags
CREATE TABLE tags(tag_id serial primary key UNIQUE, tag varchar(64));

#open table
SELECT * FROM tags;

#create images_tags
CREATE TABLE images_tags(image_id INTEGER REFERENCES images(image_id), tag_id INTEGER REFERENCES tags(tag_id), UNIQUE(image_id,tag_id));

#open table
SELECT * FROM images_tags;

#create images_likes
CREATE TABLE images_likes(user_id INTEGER REFERENCES users(user_id), image_id INTEGER REFERENCES images(image_id), UNIQUE(user_id, image_id));

#Ingresar 2 usuarios
INSERT INTO users(name) VALUES('Nancy');
INSERT INTO users(name) VALUES('Miguel');
INSERT INTO users(name) VALUES('Seba');

#Ingresar 2 imagenes por usuario
INSERT INTO images(image,user_id) VALUES('salgan de mi playa',2);
INSERT INTO images(image,user_id) VALUES('vacaciones',2);
INSERT INTO images(image,user_id) VALUES('vacaciones en la playa',1);
INSERT INTO images(image,user_id) VALUES('quiero ir a la playa',1);

#Ingresar 3 likes por cada imagenes
INSERT INTO images_likes(user_id,image_id) VALUES('1','1');
INSERT INTO images_likes(user_id,image_id) VALUES('2','1');
INSERT INTO images_likes(user_id,image_id) VALUES('3','1');

#Ingresar 8 tags
INSERT INTO tags(tag) VALUES('arte'),('computación');
INSERT INTO tags(tag) VALUES('deporte'),('salud'),('animales'),('tierra'),('sol'),('playa');

#Ingresar 3 tags por imagen
INSERT INTO images_tags(image_id,tag_id) VALUES(1,8),(1,7),(1,6);
INSERT INTO images_tags(image_id,tag_id) VALUES(2,3),(2,6),(2,7);
INSERT INTO images_tags(image_id,tag_id) VALUES(3,4),(3,5),(3,6);

#Crear una consulta que muestre el nombre de la imagen y la cantidad de likes que tiene esa imagen
SELECT image, count (images_likes)  FROM images FULL JOIN images_likes ON (images_likes.image_id = images.image_id) group by image ;

#Crear una consulta que muestre el nombre del usuario y los nombres de las fotos que le pertenecen
SELECT name, count (image)  FROM users FULL JOIN images ON (images.user_id = users.user_id) group by name ;

#Crear una consulta que muestre el nombre del tag y la cantidad de imagenes asociadas a ese tag
SELECT tag, count (images_tags)  FROM tags FULL JOIN images_tags ON (images_tags.tag_id = tags.tag_id) group by tag ;
